!!********************************************************************
!!Manual Thin Sequence building
!!********************************************************************

mylhcbeam = par_mylhcbeam;

nrj = par_beam_energy_tot; 

off_all_errors = par_off_all_errors;
correct_for_D2 = par_correct_for_D2;
correct_for_MCBX = par_correct_for_MCBX;

on_errors_LHC = par_on_errors_LHC;
on_errors_MBH = par_on_errors_MBH;
on_errors_IT = par_on_errors_IT;
on_errors_Q4 = par_on_errors_Q4;
on_errors_Q5 = par_on_errors_Q5;
on_errors_D1 = par_on_errors_D1;
on_errors_D2 = par_on_errors_D2;
on_errors_MCBRD = par_on_errors_MCBRD;
on_errors_MCBXF = par_on_errors_MCBXF;

call, file="slhc/toolkit/macro.madx";        !Call some macro facilities

! Build sequence
call, file="buildsequence.madx";


!********************************************

! A Laundau octupole current 20A inj, -570A col
I_MO = par_oct_current;


! emittance_norm := par_beam_norm_emit*1.0E-6;
Nb_0:=par_beam_npart; 

! Optics
call, file="myoptics.madx";

! Beam

gamma_rel := par_beam_energy_tot / pmass;
epsx := par_beam_norm_emit / gamma_rel;
epsy := par_beam_norm_emit / gamma_rel;

bv_aux = -1;
if (mylhcbeam<3){
  beam,particle=proton,sequence=lhcb1,energy=par_beam_energy_tot,
      sigt=par_beam_sigt,bv=1,
      npart=par_beam_npart,sige=par_beam_sige,ex=epsx,ey=epsy;
  bv_aux = 1;
};
beam,particle=proton,sequence=lhcb2,energy=par_beam_energy_tot,
    sigt=par_beam_sigt,bv=-bv_aux,
    npart=par_beam_npart,sige=par_beam_sige,ex=epsx,ey=epsy;

! Tunes and chromaticity
tsplit= par_tsplit;
qx00  = par_qx00;
qy00  = par_qy00;
qx0 = par_qx0;
qy0 = par_qy0;

qprime = par_chromaticity;

on_qpp = par_on_qpp; 

!********************************************



!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++;
!   Rematch IP1 IP5 phase
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++;
! nominal round: mux_ip15 = 31.21038468 ; muy_ip15 = 30.37288037 ;
! nominal injection: mux_ip15 = 31.19538482 ; muy_ip15 = 30.36788031 ;

!mux_ip15 = 31.21038468;
!muy_ip15 = 31.19538482;

!call, file="slhc/toolkit/make_ip15phase.madx";
!call, file=slhc/toolkit/make_ip15phase_tm.madx; ! use phase-trombone instead
!call, file=slhc/toolkit/delete_ip15phase_tm.madx; ! remove phase trombone

! test new optics
if (mylhcbeam==1){
  exec, check_ip(b1);
} else {
  exec, check_ip(b2);
};
mux_ip15_ref=table(twiss,IP1,mux)-table(twiss,IP5,mux);
muy_ip15_ref=table(twiss,IP1,muy)-table(twiss,IP5,muy);
value,mux_ip15_ref,muy_ip15_ref;


! Set IP knobs
on_x1 = par_on_x1; 
on_sep1 = par_on_sep1;
on_x5 = par_on_x5;
on_sep5 = par_on_sep5;
on_x2 = par_on_x2; 
on_sep2 = par_on_sep2;
on_x8 = par_on_x8;
on_sep8 =par_on_sep8;
on_a1 = par_on_a1;
on_o1 = par_on_o1;           
on_a5 = par_on_a5;
on_o5 = par_on_o5;
on_a2 = par_on_a2;
on_o2 = par_on_o2;
on_a8 = par_on_a8;
on_o8 = par_on_o8;
on_crab1 = par_on_crab1;
on_crab5 = par_on_crab5;           

! Set dispersion correction knob
on_disp = par_on_disp ;


! spectrometers in experiments
on_alice = par_on_alice;
on_lhcb  = par_on_lhcb ;

!Avoid crabbing more than the crossing angle
if ( abs(on_crab1)>abs(par_xing_ang_ip15) && on_crab1 <> 0) {on_crab1 = abs(on_crab1)/on_crab1 * abs(par_xing_ang_ip15);}
if ( abs(on_crab5)>abs(par_xing_ang_ip15) && on_crab5 <> 0) {on_crab5 = abs(on_crab5)/on_crab5 * abs(par_xing_ang_ip15);}

! solenoids in experiments
on_sol_atlas = par_on_sol_atlas;
on_sol_cms = par_on_sol_cms;
on_sol_alice = par_on_sol_alice;

exec, print_crossing_knobs;
exec, crossing_save;

!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++;
!                        TEST the optics
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++;
!/*

exec, crossing_disable;

system,"rm -f twiss.b1";system,"rm -f twiss.b2";

if (mylhcbeam<3){
  Use, sequence=lhcb1;
  select,flag=twiss,clear;
  select, flag=twiss, pattern="IP1",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
  select, flag=twiss, pattern="IP2",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
  select, flag=twiss, pattern="IP5",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
  select, flag=twiss, pattern="IP8",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
  twiss,sequence=lhcb1,file=twiss.b1;system,"cat twiss.b1";
};

Use, sequence=lhcb2;
select,flag=twiss,clear;
select, flag=twiss, pattern="IP1",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
select, flag=twiss, pattern="IP2",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
select, flag=twiss, pattern="IP5",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
select, flag=twiss, pattern="IP8",   column=name,s,betx,bety,alfx,alfy,dx,dpx,mux,muy;
twiss, sequence=lhcb2,file=twiss.b2;system,"cat twiss.b2";

system,"rm -f twiss.b1";system,"rm -f twiss.b2";
!Switch on Xscheme
exec, crossing_restore;

if (mylhcbeam<3){
  Use, sequence=lhcb1;
  select,flag=twiss,clear;
  select, flag=twiss, pattern="IP1",   column=name,s,x,y,px,py;
  select, flag=twiss, pattern="IP2",   column=name,s,x,y,px,py;
  select, flag=twiss, pattern="IP5",   column=name,s,x,y,px,py;
  select, flag=twiss, pattern="IP8",   column=name,s,x,y,px,py;
  twiss, sequence=lhcb1, file=twiss.b1;system,"cat twiss.b1";
};

xnom1=table(twiss,IP1,x);pxnom1=table(twiss,IP1,px);ynom1=table(twiss,IP1,y);pynom1=table(twiss,IP1,py);
xnom2=table(twiss,IP2,x);pxnom2=table(twiss,IP2,px);ynom2=table(twiss,IP2,y);pynom2=table(twiss,IP2,py);
xnom5=table(twiss,IP5,x);pxnom5=table(twiss,IP5,px);ynom5=table(twiss,IP5,y);pynom5=table(twiss,IP5,py);
xnom8=table(twiss,IP8,x);pxnom8=table(twiss,IP8,px);ynom8=table(twiss,IP8,y);pynom8=table(twiss,IP8,py);

Use, sequence=lhcb2;
select,flag=twiss,clear;
select, flag=twiss, pattern="IP1",   column=name,s,x,y,px,py;
select, flag=twiss, pattern="IP2",   column=name,s,x,y,px,py;
select, flag=twiss, pattern="IP5",   column=name,s,x,y,px,py;
select, flag=twiss, pattern="IP8",   column=name,s,x,y,px,py;
twiss, sequence=lhcb2, file=twiss.b2;system,"cat twiss.b2";

value,xnom1,xnom2,xnom5,xnom8;
value,ynom1,ynom2,ynom5,ynom8;
value,pxnom1,pxnom2,pxnom5,pxnom8;
value,pynom1,pynom2,pynom5,pynom8;
